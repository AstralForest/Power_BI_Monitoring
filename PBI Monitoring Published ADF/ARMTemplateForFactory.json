{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "adf-af-pbimon-1"
        },
        "ls_kv_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://kv-af-pbimon-1.vault.azure.net/"
        },
        "ls_rest_api_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "@{linkedService().p_URL}"
        },
        "ls_sqldb_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "secret-pbimon-db-connection-string"
        },
        "default_properties_token_url_value": {
            "type": "string",
            "defaultValue": "https://login.microsoftonline.com/6313bce2-6153-4750-9bef-879dcc6da67a/oauth2/token"
        },
        "default_properties_kv_app_secret_url_value": {
            "type": "string",
            "defaultValue": "https://kv-af-pbimon-1.vault.azure.net/secrets/secret-pbimon-app-reg-secret/?api-version=7.0"
        },
        "default_properties_app_client_id_value": {
            "type": "string",
            "defaultValue": "78504ad0-c82b-4974-bd94-2e14d3424fce"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/Load Graph API Group Members')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Groups From Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT DISTINCT\n\tidentifier AS groupId,\n\tdisplay_name AS groupName\nFROM\n\t[silver].[report_users]\nWHERE\n\tprincipal_type = 'Group'\nUNION\nSELECT DISTINCT\n\tidentifier AS groupId,\n\tdisplayName AS groupName\nFROM\n\t[bronze].[app_users]\nWHERE\n\tprincipalType = 'Group'\nUNION\nSELECT DISTINCT\n\tidentifier AS groupId,\n\tdisplay_name AS groupName\nFROM [silver].[workspace_users]\nWHERE\n\tprincipal_type = 'Group'\nUNION\nSELECT DISTINCT\n\trls.member_id AS groupId,\n\tgrp.display_name AS groupName\nFROM [silver].[rls] rls\nLEFT JOIN silver.graph_groups grp ON\n\trls.member_id = grp.id\nWHERE\n\tmember_type = 'Group'\n",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "For Each Group",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Truncate Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Graph API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Groups From Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Groups From Bronze Table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Load Graph API Group Members",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "00:01:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "requestDate",
                                                    "value": {
                                                        "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "groupId",
                                                    "value": {
                                                        "value": "@item().groupId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "groupName",
                                                    "value": {
                                                        "value": "@item().groupName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('Bearer ', activity('Get Graph API Bearer Token').output.access_token)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "supportRFC5988": "true",
                                                "AbsoluteUrl": "$['continuationUri']"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false,
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['accountEnabled']"
                                                    },
                                                    "sink": {
                                                        "name": "accountEnabled",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['mail']"
                                                    },
                                                    "sink": {
                                                        "name": "mail",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['displayName']"
                                                    },
                                                    "sink": {
                                                        "name": "displayName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['servicePrincipalType']"
                                                    },
                                                    "sink": {
                                                        "name": "servicePrincipalType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['givenName']"
                                                    },
                                                    "sink": {
                                                        "name": "givenName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['surname']"
                                                    },
                                                    "sink": {
                                                        "name": "surname",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['requestDate']"
                                                    },
                                                    "sink": {
                                                        "name": "requestDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['groupId']"
                                                    },
                                                    "sink": {
                                                        "name": "groupId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['groupName']"
                                                    },
                                                    "sink": {
                                                        "name": "groupName",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['members']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_rest_api",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_URL": {
                                                    "value": "@concat('https://graph.microsoft.com/v1.0/groups/', item().groupId , '/?$expand=members')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sqldb",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_SchemaName": "bronze",
                                                "p_TableName": "graph_group_members"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Truncate Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "TRUNCATE TABLE [bronze].[graph_group_members];\n\nSELECT 1 AS output",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Graph API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://graph.microsoft.com')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Group",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_graph_group_members]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Graph API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-19T11:17:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Graph API Groups')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Graph API Groups",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Graph API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Graph API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['@odata.nextLink']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[graph_groups]",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['displayName']"
                                        },
                                        "sink": {
                                            "name": "displayName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://graph.microsoft.com/v1.0/groups"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "graph_groups"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Graph API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://graph.microsoft.com')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Graph API Groups",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_graph_groups]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Power BI Monitoring/Graph API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-19T11:17:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Graph API User Assigned Plans')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Graph API User Assigned Plans",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Graph API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Graph API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['@odata.nextLink']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[graph_users_assigned_plans]",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['assignedPlans']"
                                        },
                                        "sink": {
                                            "name": "assignedPlans",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://graph.microsoft.com/v1.0/users?$select=id,assignedPlans"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "graph_users_assigned_plans"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Graph API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://graph.microsoft.com')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Graph API User Assigned Plans",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_graph_users_assigned_plans]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Graph API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-03T08:23:29Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Graph API Users')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Graph API Users",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Graph API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Graph API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['@odata.nextLink']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[graph_users]",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['displayName']"
                                        },
                                        "sink": {
                                            "name": "displayName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['givenName']"
                                        },
                                        "sink": {
                                            "name": "givenName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['surname']"
                                        },
                                        "sink": {
                                            "name": "surname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['mail']"
                                        },
                                        "sink": {
                                            "name": "mail",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['mailNickname']"
                                        },
                                        "sink": {
                                            "name": "mailNickname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['jobTitle']"
                                        },
                                        "sink": {
                                            "name": "jobTitle",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['department']"
                                        },
                                        "sink": {
                                            "name": "department",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['companyName']"
                                        },
                                        "sink": {
                                            "name": "companyName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['officeLocation']"
                                        },
                                        "sink": {
                                            "name": "officeLocation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['city']"
                                        },
                                        "sink": {
                                            "name": "city",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['accountEnabled']"
                                        },
                                        "sink": {
                                            "name": "accountEnabled"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://graph.microsoft.com/v1.0/users?$select=id,displayName,givenName,surname,mail,mailNickname,jobTitle,department,companyName,officeLocation,city,accountEnabled"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "graph_users"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Graph API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://graph.microsoft.com')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Graph API Users",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_graph_users]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Graph API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-19T11:17:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Activity Events 30days')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "For Each Date",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@range(1, 30)",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Load Power BI API Activity Events",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Load Power BI API Activity Events",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "p_Date": {
                                                "value": "@formatDateTime(adddays(utcnow(), mul(-1, item())), 'yyyy-MM-dd')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Load Gold",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[gold].[sp_fact_activity_events]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "variables": {
                    "v_StartDateTime": {
                        "type": "String"
                    },
                    "v_EndDateTime": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Deployment"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-03T08:19:25Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Activity Events')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Activity Events')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Set v_StartDateTime",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "v_StartDateTime",
                            "value": {
                                "value": "@formatDateTime(pipeline().parameters.p_Date, 'yyyy-MM-ddTHH:mm:ss')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set v_EndDateTime",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set v_StartDateTime",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "v_EndDateTime",
                            "value": {
                                "value": "@formatDateTime(adddays(addseconds(pipeline().parameters.p_Date, -1), +1), 'yyyy-MM-ddTHH:mm:ss')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Activity Events",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_activity_events]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load Power BI API Activity Events",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set v_EndDateTime",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:05:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[activity_events]",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['Activity']"
                                        },
                                        "sink": {
                                            "name": "Activity",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ActivityId']"
                                        },
                                        "sink": {
                                            "name": "ActivityId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['AppId']"
                                        },
                                        "sink": {
                                            "name": "AppId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['AppName']"
                                        },
                                        "sink": {
                                            "name": "AppName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['AppReportId']"
                                        },
                                        "sink": {
                                            "name": "AppReportId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ArtifactId']"
                                        },
                                        "sink": {
                                            "name": "ArtifactId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ArtifactName']"
                                        },
                                        "sink": {
                                            "name": "ArtifactName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['AuditedArtifactInformation']"
                                        },
                                        "sink": {
                                            "name": "AuditedArtifactInformation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['CapacityId']"
                                        },
                                        "sink": {
                                            "name": "CapacityId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['CapacityName']"
                                        },
                                        "sink": {
                                            "name": "CapacityName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ClientIP']"
                                        },
                                        "sink": {
                                            "name": "ClientIP",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ConsumptionMethod']"
                                        },
                                        "sink": {
                                            "name": "ConsumptionMethod",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['CopiedReportId']"
                                        },
                                        "sink": {
                                            "name": "CopiedReportId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['CopiedReportName']"
                                        },
                                        "sink": {
                                            "name": "CopiedReportName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['CreationTime']"
                                        },
                                        "sink": {
                                            "name": "CreationTime",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['DataConnectivityMode']"
                                        },
                                        "sink": {
                                            "name": "DataConnectivityMode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['DatasetId']"
                                        },
                                        "sink": {
                                            "name": "DatasetId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['DatasetName']"
                                        },
                                        "sink": {
                                            "name": "DatasetName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['Datasets']"
                                        },
                                        "sink": {
                                            "name": "Datasets",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['DistributionMethod']"
                                        },
                                        "sink": {
                                            "name": "DistributionMethod",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ExternalSubscribeeInformation']"
                                        },
                                        "sink": {
                                            "name": "ExternalSubscribeeInformation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['Id']"
                                        },
                                        "sink": {
                                            "name": "Id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['IsSuccess']"
                                        },
                                        "sink": {
                                            "name": "IsSuccess",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ItemName']"
                                        },
                                        "sink": {
                                            "name": "ItemName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['LastRefreshTime']"
                                        },
                                        "sink": {
                                            "name": "LastRefreshTime",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['MentionedUsersInformation']"
                                        },
                                        "sink": {
                                            "name": "MentionedUsersInformation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ObjectId']"
                                        },
                                        "sink": {
                                            "name": "ObjectId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['Operation']"
                                        },
                                        "sink": {
                                            "name": "Operation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['OrganizationId']"
                                        },
                                        "sink": {
                                            "name": "OrganizationId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['RecordType']"
                                        },
                                        "sink": {
                                            "name": "RecordType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ReportId']"
                                        },
                                        "sink": {
                                            "name": "ReportId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ReportName']"
                                        },
                                        "sink": {
                                            "name": "ReportName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ReportType']"
                                        },
                                        "sink": {
                                            "name": "ReportType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['RequestId']"
                                        },
                                        "sink": {
                                            "name": "RequestId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['SharingAction']"
                                        },
                                        "sink": {
                                            "name": "SharingAction",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['SharingInformation']"
                                        },
                                        "sink": {
                                            "name": "SharingInformation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['SubscribeeInformation']"
                                        },
                                        "sink": {
                                            "name": "SubscribeeInformation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['SubscriptionSchedule']"
                                        },
                                        "sink": {
                                            "name": "SubscriptionSchedule",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['TargetWorkspaceId']"
                                        },
                                        "sink": {
                                            "name": "TargetWorkspaceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['UserAgent']"
                                        },
                                        "sink": {
                                            "name": "UserAgent",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['UserId']"
                                        },
                                        "sink": {
                                            "name": "UserId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['UserKey']"
                                        },
                                        "sink": {
                                            "name": "UserKey",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['UserType']"
                                        },
                                        "sink": {
                                            "name": "UserType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['Workload']"
                                        },
                                        "sink": {
                                            "name": "Workload",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['WorkspaceId']"
                                        },
                                        "sink": {
                                            "name": "WorkspaceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['WorkSpaceName']"
                                        },
                                        "sink": {
                                            "name": "WorkSpaceName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['activityEventEntities']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": {
                                        "value": "@concat('https://api.powerbi.com/v1.0/myorg/admin/activityevents?startDateTime=''', variables('v_StartDateTime'), '''&endDateTime=''', variables('v_EndDateTime'), '''')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "activity_events"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "parameters": {
                    "p_Date": {
                        "type": "string"
                    }
                },
                "variables": {
                    "v_StartDateTime": {
                        "type": "String"
                    },
                    "v_EndDateTime": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-03T08:19:25Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API App Reports')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Apps From Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT DISTINCT\n\tid AS appId,\n\tname AS appName\nFROM\n\t[bronze].[apps]",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "For Each App",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Truncate Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Apps From Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Apps From Bronze Table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "Load Power BI API App Reports",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "00:05:00",
                                        "retry": 5,
                                        "retryIntervalInSeconds": 720,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "requestDate",
                                                    "value": {
                                                        "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "appId",
                                                    "value": {
                                                        "value": "@item().appId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "appName",
                                                    "value": {
                                                        "value": "@item().appName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "supportRFC5988": "true",
                                                "AbsoluteUrl": "$['continuationUri']"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false,
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['reportType']"
                                                    },
                                                    "sink": {
                                                        "name": "reportType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['webUrl']"
                                                    },
                                                    "sink": {
                                                        "name": "webUrl",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['embedUrl']"
                                                    },
                                                    "sink": {
                                                        "name": "embedUrl",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['datasetId']"
                                                    },
                                                    "sink": {
                                                        "name": "datasetId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['createdDateTime']"
                                                    },
                                                    "sink": {
                                                        "name": "createdDateTime",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['modifiedDateTime']"
                                                    },
                                                    "sink": {
                                                        "name": "modifiedDateTime",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['modifiedBy']"
                                                    },
                                                    "sink": {
                                                        "name": "modifiedBy",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['createdBy']"
                                                    },
                                                    "sink": {
                                                        "name": "createdBy",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['users']"
                                                    },
                                                    "sink": {
                                                        "name": "users",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['subscriptions']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptions",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['requestDate']"
                                                    },
                                                    "sink": {
                                                        "name": "requestDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['appId']"
                                                    },
                                                    "sink": {
                                                        "name": "appId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['appName']"
                                                    },
                                                    "sink": {
                                                        "name": "appName",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_rest_api",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_URL": {
                                                    "value": "@concat('https://api.powerbi.com/v1.0/myorg/admin/apps/', item().appId , '/reports')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sqldb",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_SchemaName": "bronze",
                                                "p_TableName": "app_reports"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Truncate Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "TRUNCATE TABLE [bronze].[app_reports];\n\nSELECT 1 AS output",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each App",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_app_reports]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-03T08:19:24Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API App Users')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Apps From Silver Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT DISTINCT\n\tid AS appId,\n\tname AS appName\nFROM\n\t[bronze].[apps]",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "For Each App",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Apps From Silver Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Truncate Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Apps From Silver Table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "Load Power BI API App Users",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "00:01:00",
                                        "retry": 2,
                                        "retryIntervalInSeconds": 600,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "requestDate",
                                                    "value": {
                                                        "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "appId",
                                                    "value": {
                                                        "value": "@item().appId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "appName",
                                                    "value": {
                                                        "value": "@item().appName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "supportRFC5988": "true",
                                                "AbsoluteUrl": "$['continuationUri']"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false,
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['AppUserAccessRight']"
                                                    },
                                                    "sink": {
                                                        "name": "AppUserAccessRight",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['emailAddress']"
                                                    },
                                                    "sink": {
                                                        "name": "emailAddress",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['displayName']"
                                                    },
                                                    "sink": {
                                                        "name": "displayName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['identifier']"
                                                    },
                                                    "sink": {
                                                        "name": "identifier",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['graphId']"
                                                    },
                                                    "sink": {
                                                        "name": "graphId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['principalType']"
                                                    },
                                                    "sink": {
                                                        "name": "principalType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['userType']"
                                                    },
                                                    "sink": {
                                                        "name": "userType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['requestDate']"
                                                    },
                                                    "sink": {
                                                        "name": "requestDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['appId']"
                                                    },
                                                    "sink": {
                                                        "name": "appId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['appName']"
                                                    },
                                                    "sink": {
                                                        "name": "appName",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_rest_api",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_URL": {
                                                    "value": "@concat('https://api.powerbi.com/v1.0/myorg/admin/apps/', item().appId , '/users')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sqldb",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_SchemaName": "bronze",
                                                "p_TableName": "app_users"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each App",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_app_users]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Truncate Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "TRUNCATE TABLE [bronze].[app_users];\n\nSELECT 1 AS output",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-03T08:19:25Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Apps')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Power BI API Apps",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[apps];",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastUpdate']"
                                        },
                                        "sink": {
                                            "name": "lastUpdate",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['description']"
                                        },
                                        "sink": {
                                            "name": "description",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['publishedBy']"
                                        },
                                        "sink": {
                                            "name": "publishedBy",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['workspaceId']"
                                        },
                                        "sink": {
                                            "name": "workspaceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['users']"
                                        },
                                        "sink": {
                                            "name": "items",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://api.powerbi.com/v1.0/myorg/admin/apps?$top=5000"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "apps"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Apps",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_apps]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-11-16T08:20:53Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Dataflow Refreshes')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ForEach",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_dataflow_refreshes]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Get Dataflows From Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT \n\tobjectId,\n\tworkspaceId\nFROM bronze.dataflows\n",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Truncate Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "TRUNCATE TABLE bronze.dataflow_refreshes\n\nSELECT 1 AS output",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Dataflows From Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Truncate Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Dataflows From Bronze Table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Load Power BI API Workspace Dataset Refreshes",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "requestDate",
                                                    "value": {
                                                        "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "dataflowId",
                                                    "value": {
                                                        "value": "@item().objectId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "supportRFC5988": "true",
                                                "AbsoluteUrl": "$['continuationUri']"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false,
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "refreshId"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['refreshType']"
                                                    },
                                                    "sink": {
                                                        "name": "refreshType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['startTime']"
                                                    },
                                                    "sink": {
                                                        "name": "startTime",
                                                        "type": "DateTime"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['endTime']"
                                                    },
                                                    "sink": {
                                                        "name": "endTime",
                                                        "type": "DateTime"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['status']"
                                                    },
                                                    "sink": {
                                                        "name": "status",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['requestDate']"
                                                    },
                                                    "sink": {
                                                        "name": "requestDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['dataflowId']"
                                                    },
                                                    "sink": {
                                                        "name": "dataflowId"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_rest_api",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_URL": {
                                                    "value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/', item().workspaceId , '/dataflows/', item().objectId , '/transactions')\n",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sqldb",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_SchemaName": "bronze",
                                                "p_TableName": "dataflow_refreshes"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-31T12:37:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Dataflows')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Power BI API Dataflows",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[dataflows];",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['objectId']"
                                        },
                                        "sink": {
                                            "name": "objectId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['description']"
                                        },
                                        "sink": {
                                            "name": "description",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['workspaceId']"
                                        },
                                        "sink": {
                                            "name": "workspaceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['configuredBy']"
                                        },
                                        "sink": {
                                            "name": "configuredBy",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['generation']"
                                        },
                                        "sink": {
                                            "name": "generation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['users']"
                                        },
                                        "sink": {
                                            "name": "users",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://api.powerbi.com/v1.0/myorg/admin/dataflows"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "dataflows"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Dataflows",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_dataflows]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-11-16T08:20:53Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Dataset Refreshes')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Workspaces and Datasets From Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "SELECT DISTINCT \r\n\t  wwsp.id AS workspaceId\r\n\t, pd.id AS datasetId\r\nFROM \r\n\tbronze.workspaces_with_sp wwsp\r\nINNER JOIN \r\n\tbronze.datasets pd\r\n\t\tON wwsp.id = pd.workspaceId\r\nWHERE wwsp.type = 'Workspace'\r\nAND pd.IsRefreshable = 'True'",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Truncate Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "TRUNCATE TABLE [bronze].[dataset_refreshes];\r\n\r\nSELECT 1 AS output",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Dataset in Workspace",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_dataset_refreshes]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "For Each Dataset in Workspace",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Workspaces and Datasets From Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Truncate Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Workspaces and Datasets From Bronze Table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Load Power BI API Workspace Dataset Refreshes",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "00:05:00",
                                        "retry": 5,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "requestDate",
                                                    "value": {
                                                        "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "datasetId",
                                                    "value": {
                                                        "value": "@item().datasetId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "supportRFC5988": "true",
                                                "AbsoluteUrl": "$['continuationUri']"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false,
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['requestId']"
                                                    },
                                                    "sink": {
                                                        "name": "requestId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['refreshType']"
                                                    },
                                                    "sink": {
                                                        "name": "refreshType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['startTime']"
                                                    },
                                                    "sink": {
                                                        "name": "startTime",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['endTime']"
                                                    },
                                                    "sink": {
                                                        "name": "endTime",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['status']"
                                                    },
                                                    "sink": {
                                                        "name": "status",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['serviceExceptionJson']"
                                                    },
                                                    "sink": {
                                                        "name": "serviceExceptionJson",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['requestDate']"
                                                    },
                                                    "sink": {
                                                        "name": "requestDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['datasetId']"
                                                    },
                                                    "sink": {
                                                        "name": "datasetId",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_rest_api",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_URL": {
                                                    "value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/', item().workspaceId , '/datasets/', item().datasetId , '/refreshes')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sqldb",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_SchemaName": "bronze",
                                                "p_TableName": "dataset_refreshes"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-12T14:04:15Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Datasets')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Datasets",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_datasets]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load Power BI API Datasets",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:05:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[datasets]",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['configuredBy']"
                                        },
                                        "sink": {
                                            "name": "configuredBy",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['isRefreshable']"
                                        },
                                        "sink": {
                                            "name": "isRefreshable",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['isEffectiveIdentityRolesRequired']"
                                        },
                                        "sink": {
                                            "name": "isEffectiveIdentityRolesRequired",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['createdDate']"
                                        },
                                        "sink": {
                                            "name": "createdDate",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['workspaceId']"
                                        },
                                        "sink": {
                                            "name": "workspaceId"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "DateTime"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": {
                                        "value": "https://api.powerbi.com/v1.0/myorg/admin/datasets",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "datasets"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-26T11:15:00Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Pipelines')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Power BI API Pipelines",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[pipelines];",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['displayName']"
                                        },
                                        "sink": {
                                            "name": "displayName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['description']"
                                        },
                                        "sink": {
                                            "name": "description",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://api.powerbi.com/v1.0/myorg/admin/pipelines"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "pipelines"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Pipelines",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_pipelines]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-11-16T08:20:53Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Refreshables')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Power BI API Refreshables",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[dataset_refreshes];",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "datasetId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['kind']"
                                        },
                                        "sink": {
                                            "name": "kind",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['id']"
                                        },
                                        "sink": {
                                            "name": "lastRefreshId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['startTime']"
                                        },
                                        "sink": {
                                            "name": "startTime",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['refreshType']"
                                        },
                                        "sink": {
                                            "name": "refreshType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['endTime']"
                                        },
                                        "sink": {
                                            "name": "endTime",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['serviceExceptionJson']"
                                        },
                                        "sink": {
                                            "name": "serviceExceptionJson",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['status']"
                                        },
                                        "sink": {
                                            "name": "status",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['requestId']"
                                        },
                                        "sink": {
                                            "name": "requestId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['extendedStatus']"
                                        },
                                        "sink": {
                                            "name": "extendedStatus",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['lastRefresh']['refreshAttempts']"
                                        },
                                        "sink": {
                                            "name": "refreshAttempts",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['refreshSchedule']['days']"
                                        },
                                        "sink": {
                                            "name": "days",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['refreshSchedule']['times']"
                                        },
                                        "sink": {
                                            "name": "times",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['refreshSchedule']['enabled']"
                                        },
                                        "sink": {
                                            "name": "enabled",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['refreshSchedule']['localTimeZoneId']"
                                        },
                                        "sink": {
                                            "name": "localTimeZoneId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['refreshSchedule']['notifyOption']"
                                        },
                                        "sink": {
                                            "name": "notifyOption",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['configuredBy']"
                                        },
                                        "sink": {
                                            "name": "configuredBy",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://api.powerbi.com/v1.0/myorg/admin/capacities/refreshables"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "dataset_refreshes"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Refreshables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_dataset_refreshes]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-11-16T08:20:53Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Reports')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Power BI API Reports",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[reports]",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['reportType']"
                                        },
                                        "sink": {
                                            "name": "reportType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['webUrl']"
                                        },
                                        "sink": {
                                            "name": "webUrl",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['embedUrl']"
                                        },
                                        "sink": {
                                            "name": "embedUrl",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['datasetId']"
                                        },
                                        "sink": {
                                            "name": "datasetId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['createdDateTime']"
                                        },
                                        "sink": {
                                            "name": "createdDateTime",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['modifiedDateTime']"
                                        },
                                        "sink": {
                                            "name": "modifiedDateTime",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['modifiedBy']"
                                        },
                                        "sink": {
                                            "name": "modifiedBy",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['createdBy']"
                                        },
                                        "sink": {
                                            "name": "createdBy",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['workspaceId']"
                                        },
                                        "sink": {
                                            "name": "workspaceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['isFromPbix']"
                                        },
                                        "sink": {
                                            "name": "isFromPbix",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['isOwnedByMe']"
                                        },
                                        "sink": {
                                            "name": "isOwnedByMe",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['datasetWorkspaceId']"
                                        },
                                        "sink": {
                                            "name": "datasetWorkspaceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['users']"
                                        },
                                        "sink": {
                                            "name": "users",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['subscriptions']"
                                        },
                                        "sink": {
                                            "name": "subscriptions",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://api.powerbi.com/v1.0/myorg/admin/reports?$top=10000"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "reports"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Reports",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_reports]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-31T12:37:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Scan Info')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "POST Scan Info",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Workspaces From Bronze Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                    "type": "Expression"
                                }
                            },
                            "url": "https://api.powerbi.com/v1.0/myorg/admin/workspaces/getInfo?lineage=True&datasourceDetails=True&datasetSchema=True&datasetExpressions=True&getArtifactUsers=True",
                            "body": {
                                "value": "@concat('{\"workspaces\": [', replace(replace(join(activity('Get Workspaces From Bronze Table').output.value, ','), '{\"id\":', ''), '}', ''),']}')\n",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Get Workspaces From Bronze Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('\nSELECT DISTINCT id\n            FROM\n                [bronze].[workspaces]\n            WHERE id IS NOT NULL\nORDER BY\n\tid\nOFFSET ', pipeline().parameters.p_Offset_Step, ' ROWS\nFETCH NEXT ', pipeline().parameters.p_Next_Step, ' ROWS ONLY')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load Power BI API Workspaces Info",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "POST Scan Info",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow())",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['reports']"
                                        },
                                        "sink": {
                                            "name": "reports",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['dashboards']"
                                        },
                                        "sink": {
                                            "name": "dashboards",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['datasets']"
                                        },
                                        "sink": {
                                            "name": "datasets",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['dataflows']"
                                        },
                                        "sink": {
                                            "name": "dataflows",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['datamarts']"
                                        },
                                        "sink": {
                                            "name": "datamarts",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['users']"
                                        },
                                        "sink": {
                                            "name": "users",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "DateTime"
                                        }
                                    }
                                ],
                                "collectionReference": "$['workspaces']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": {
                                        "value": "@concat('https://api.powerbi.com/v1.0/myorg/admin/workspaces/scanResult/', activity('POST Scan Info').output.id)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "scan_info"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Load Power BI API Datasources Info",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "POST Scan Info",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow())",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['datasourceType']"
                                        },
                                        "sink": {
                                            "name": "datasourceType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['connectionDetails']"
                                        },
                                        "sink": {
                                            "name": "connectionDetails",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['datasourceId']"
                                        },
                                        "sink": {
                                            "name": "datasourceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['gatewayId']"
                                        },
                                        "sink": {
                                            "name": "gatewayId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "DateTime"
                                        }
                                    }
                                ],
                                "collectionReference": "$['datasourceInstances']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": {
                                        "value": "@concat('https://api.powerbi.com/v1.0/myorg/admin/workspaces/scanResult/', activity('POST Scan Info').output.id)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "scan_info_datasources"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_Offset_Step": {
                        "type": "string"
                    },
                    "p_Next_Step": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-19T11:17:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Scan in Batches')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Calculate Batches",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Workspaces Count",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[config].[sp_calculate_offset_next_step]",
                                "storedProcedureParameters": {
                                    "NextStep": {
                                        "type": "Int32",
                                        "value": "100"
                                    },
                                    "RowsNumber": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@int(activity('Get Workspaces Count').output.firstRow.cnt)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Get Workspaces Count",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Truncate Bronze Tables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT\n\tCOUNT(DISTINCT id) AS cnt\nFROM\n\t[bronze].[workspaces]\nWHERE\n\tid IS NOT NULL",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "For Each Batch",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Calculate Batches",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Calculate Batches').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Load Power BI API Dataset Datasources",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Load Power BI API Scan Info",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "p_Offset_Step": {
                                                "value": "@item().offset_step",
                                                "type": "Expression"
                                            },
                                            "p_Next_Step": {
                                                "value": "@item().next_step",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Truncate Bronze Tables",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "TRUNCATE TABLE bronze.scan_info;\nTRUNCATE TABLE bronze.scan_info_datasources;\n\nSELECT 1",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Load Silver Datasources",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Batch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_dataset_datasources]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load Silver Workspace Users",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Batch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_workspace_users]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load Silver Report Users",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Batch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_report_users]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load Silver RLS",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Batch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_rls]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load Silver Datasets Lineage",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Silver Datasources",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_datasets_lineage]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load Silver Workspace Reports",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Batch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_workspace_reports]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load Silver Endorsement",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "For Each Batch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_endorsement]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-19T11:17:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Scan Info')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Tenant Settings')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Power BI API Tenant Settings",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "-- DROP TABLE [bronze].[tenant_settings]",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "settingName"
                                        },
                                        "sink": {
                                            "name": "settingName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "title"
                                        },
                                        "sink": {
                                            "name": "title",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "enabled"
                                        },
                                        "sink": {
                                            "name": "enabled",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "canSpecifySecurityGroups"
                                        },
                                        "sink": {
                                            "name": "canSpecifySecurityGroups",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "enabledSecurityGroups"
                                        },
                                        "sink": {
                                            "name": "enabledSecurityGroup"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "tenantSettingGroup"
                                        },
                                        "sink": {
                                            "name": "tenantSettingGroup",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['tenantSettings']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://api.powerbi.com/v1/admin/tenantsettings"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "tenant_settings"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Tenant Settings",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_tenant_settings]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-03T08:20:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Workspaces with Service Principal assigned')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Pipeline to list workspaces where Service Principal dedicated for PBI Monitoring was added as Admin. This is necessary for Dataset Refresh fact calculation",
                "activities": [
                    {
                        "name": "Load Power BI API Workspaces with SP",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[workspaces_with_sp];",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['isReadOnly']"
                                        },
                                        "sink": {
                                            "name": "isReadOnly",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['isOnDedicatedCapacity']"
                                        },
                                        "sink": {
                                            "name": "isOnDedicatedCapacity",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['type']"
                                        },
                                        "sink": {
                                            "name": "type",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://api.powerbi.com/v1.0/myorg/groups"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "workspaces_with_sp"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Workspaces with SP",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_workspaces_with_sp]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-09-22T12:24:31Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Power BI API Workspaces')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Power BI API Workspaces",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Power BI API Bearer Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "additionalColumns": [
                                    {
                                        "name": "requestDate",
                                        "value": {
                                            "value": "@formatDateTime(utcnow('yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "httpRequestTimeout": "00:01:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', activity('Get Power BI API Bearer Token').output.access_token)",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "supportRFC5988": "true",
                                    "AbsoluteUrl": "$['continuationUri']"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "DROP TABLE [bronze].[workspaces];",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['isReadOnly']"
                                        },
                                        "sink": {
                                            "name": "isReadOnly",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['isOnDedicatedCapacity']"
                                        },
                                        "sink": {
                                            "name": "isOnDedicatedCapacity",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['capacityMigrationStatus']"
                                        },
                                        "sink": {
                                            "name": "capacityMigrationStatus",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['type']"
                                        },
                                        "sink": {
                                            "name": "type",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['state']"
                                        },
                                        "sink": {
                                            "name": "state",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['hasWorkspaceLevelSettings ']"
                                        },
                                        "sink": {
                                            "name": "hasWorkspaceLevelSettings",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['capacityId']"
                                        },
                                        "sink": {
                                            "name": "capacityId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['requestDate']"
                                        },
                                        "sink": {
                                            "name": "requestDate",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_rest_api",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_URL": "https://api.powerbi.com/v1.0/myorg/admin/groups?$top=5000"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "bronze",
                                    "p_TableName": "workspaces"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Client Secret from Data Vault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.kv_app_secret_url",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get Power BI API Bearer Token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Client Secret from Data Vault",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:01:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.token_url",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "@concat('grant_type=client_credentials',\n'&client_id=', pipeline().globalParameters.app_client_id,\n'&client_secret=', encodeUriComponent(activity('Get Client Secret from Data Vault').output.value),\n'&resource=https://analysis.windows.net/powerbi/api')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Load Silver",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Workspaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[silver].[sp_workspaces]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_sqldb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {
                        "duration": "0.01:00:00"
                    }
                },
                "folder": {
                    "name": "Power BI Monitoring/Power BI API"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-03T08:20:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_rest_api')]",
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Reporting Dimensions')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Procedures From Config Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT\n\tprocedure_name\nFROM\n\t[config].[stored_procedures]\nWHERE\n\tprocedure_type = 'REPORTING DIMENSION'\n\tAND is_active = 1",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "For Each Procedure",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Procedures From Config Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Procedures From Config Table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Execute Procedure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "00:30:00",
                                        "retry": 2,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "@item().procedure_name",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_sqldb",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Power BI Monitoring/Stored procedures"
                },
                "annotations": [],
                "lastPublishTime": "2023-11-14T11:32:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Reporting Facts')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Procedures From Config Table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "00:10:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT\n\tprocedure_name\nFROM\n\t[config].[stored_procedures]\nWHERE\n\tprocedure_type = 'REPORTING FACT'\n\tAND is_active = 1",
                                "queryTimeout": "00:01:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_sqldb",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_SchemaName": "n/a",
                                    "p_TableName": "n/a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "For Each Procedure",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Procedures From Config Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Procedures From Config Table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Execute Procedure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "00:30:00",
                                        "retry": 2,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "@item().procedure_name",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_sqldb",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Power BI Monitoring/Stored procedures"
                },
                "annotations": [],
                "lastPublishTime": "2023-11-14T11:32:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Power BI Monitoring Master Pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Reporting Dimensions",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Activity Events",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Graph API User Assigned Plans",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Graph API Users",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API App Users",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API App Reports",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API Apps",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API Reports",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Graph API Groups",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API Tenant Settings",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API Scan in Batches",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API Dataset Refreshes",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API Pipelines",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API Dataflow Refreshes",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Reporting Dimensions",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Reporting Facts",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Reporting Dimensions",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Reporting Facts",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Graph API Group Members",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API App Users",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Graph API Group Members",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Graph API Users",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Graph API Users",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Graph API User Assigned Plans",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Graph API User Assigned Plans",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Activity Events",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Activity Events",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_Date": {
                                    "value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Load Power BI API Apps",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Apps",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Reports",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Reports",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API App Users",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Apps",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API App Users",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API App Reports",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Apps",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API App Reports",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Workspaces",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Workspaces",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Datasets",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Datasets",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Graph API Groups",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Graph API Group Members",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Graph API Groups",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Tenant Settings",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Tenant Settings",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Scan in Batches",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Workspaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Scan in Batches",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Dataset Refreshes",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Datasets",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Power BI API Workspaces with SP assigned",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Dataset Refreshes",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Dataflows",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Dataflows",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Pipelines",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Pipelines",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Dataflow Refreshes",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Power BI API Dataflows",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Dataflow Refreshes",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Power BI API Workspaces with SP assigned",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Load Power BI API Workspaces with Service Principal assigned",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Power BI Monitoring"
                },
                "annotations": [],
                "lastPublishTime": "2023-11-14T11:32:11Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Load Reporting Dimensions')]",
                "[concat(variables('factoryId'), '/pipelines/Load Reporting Facts')]",
                "[concat(variables('factoryId'), '/pipelines/Load Graph API Group Members')]",
                "[concat(variables('factoryId'), '/pipelines/Load Graph API Users')]",
                "[concat(variables('factoryId'), '/pipelines/Load Graph API User Assigned Plans')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Activity Events')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Apps')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Reports')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API App Users')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API App Reports')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Workspaces')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Datasets')]",
                "[concat(variables('factoryId'), '/pipelines/Load Graph API Groups')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Tenant Settings')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Scan in Batches')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Dataset Refreshes')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Dataflows')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Pipelines')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Dataflow Refreshes')]",
                "[concat(variables('factoryId'), '/pipelines/Load Power BI API Workspaces with Service Principal assigned')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_rest_api')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_rest_api",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "p_URL": {
                            "value": "@dataset().p_URL",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "p_URL": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {},
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_rest_api')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sqldb')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_sqldb",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "p_SchemaName": {
                        "type": "string"
                    },
                    "p_TableName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().p_SchemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().p_TableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_kv')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('ls_kv_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_rest_api')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "p_URL": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestService",
                "typeProperties": {
                    "url": "[parameters('ls_rest_api_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_sqldb')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ls_kv",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('ls_sqldb_properties_typeProperties_connectionString_secretName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_kv')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tg_pbimon_daily')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Power BI Monitoring Master Pipeline",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2024-02-22T06:30:00",
                        "timeZone": "Central European Standard Time"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Power BI Monitoring Master Pipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/default')]",
            "type": "Microsoft.DataFactory/factories/globalparameters",
            "apiVersion": "2018-06-01",
            "properties": {
                "token_url": {
                    "type": "string",
                    "value": "[parameters('default_properties_token_url_value')]"
                },
                "kv_app_secret_url": {
                    "type": "string",
                    "value": "[parameters('default_properties_kv_app_secret_url_value')]"
                },
                "app_client_id": {
                    "type": "string",
                    "value": "[parameters('default_properties_app_client_id_value')]"
                }
            },
            "dependsOn": []
        }
    ]
}